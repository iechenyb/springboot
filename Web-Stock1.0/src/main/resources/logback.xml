<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<include resource="org/springframework/boot/logging/logback/base.xml"/> 
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="LOG_HOME" value="C:/data/logs" />
	<logger name="org.springframework.web" level="error"/>
    <logger name="org.springboot.sample" level="error" />
    <logger name="com.alibaba.druid" level="error" />
    
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="infor" />
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="infor" ></logger>
    <logger name="org.hibernate.SQL" level="infor" />
    <logger name="org.hibernate.engine.QueryParameters" level="infor" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="infor" />
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--
			%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}	-%msg%n
			格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}] %X{logthreadId} %-5level %logger{80} %msg%n</pattern>
			<charset>UTF-8</charset> 
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 .%d{yyyy-MM-dd}-->
			<FileNamePattern>${LOG_HOME}/Web-YH-%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<!--日志文件保留天数 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--
			.%M%line
			[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%p] [%t] [%F] [%L] %m%n格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}] %X{logthreadId} %-5level %logger{80} %msg%n</pattern>
			<charset>utf-8</charset> 
		</encoder>
		<!--日志文件最大的大小  -Dfile.encoding=UTF-8-->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	<appender name="syslog"      
        class="ch.qos.logback.core.rolling.RollingFileAppender">      
        <File>${LOG_HOME}/sys.log</File>      
        <!-- rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。 -->  
        <!-- TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责触发滚动 -->  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">      
            <!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 -->  
            <!-- 文件名：log/sys.2017-12-05.0.log -->  
            <fileNamePattern>${LOG_HOME}/sys.%d.%i.log</fileNamePattern>   
            <!-- 每产生一个日志文件，该日志文件的保存期限为5天 -->   
            <maxHistory>5</maxHistory>     
            <timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">      
                <!-- maxFileSize:这是活动文件的大小，默认值是10MB,本篇设置为1KB，只是为了演示 -->    
                <maxFileSize>10MB</maxFileSize>      
            </timeBasedFileNamingAndTriggeringPolicy>      
        </rollingPolicy>      
        <encoder>      
            <!-- pattern节点，用来设置日志的输入格式 -->  
            <pattern>      
                %d %p (%file:%line\)- %m%n    
            </pattern>      
            <!-- 记录日志的编码 -->  
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->     
        </encoder>      
    </appender>
	<!-- 日志输出级别INFO ERROR WARN -->
	<root level="INFO">
	    <appender-ref ref="STDOUT" />
		<appender-ref ref="syslog" />
	</root>
	   <!--输出sql语句-->
    <logger name="com.sun" level="info" />
</configuration>